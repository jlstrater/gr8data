buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate:4.3.10.5"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
}

version "0.1"
group "gr8data"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'codenarc'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"

    compile "org.grails.plugins:hibernate"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"

    runtime "com.h2database:h2"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile 'org.springframework.restdocs:spring-restdocs-restassured:1.1.0.M1'

    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

ext {
    snippetsDir = file('src/docs/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
    sourceDir = file('src/docs')
    attributes 'snippets': snippetsDir,
            'source-highlighter' : 'prettify',
            'imagesdir':'images',
            'toc':'left',
            'icons': 'font',
            'setanchors':'true',
            'idprefix':'',
            'idseparator':'-',
            'docinfo1':'true'
}

task cleanTempDir(type: Delete) {
    delete fileTree(dir: 'src/docs/generated-snippets')
}

task publishDocs(type: GradleBuild) {
    dependsOn asciidoctor
    buildFile = file('publish.gradle')
    tasks = ['publishGhPages']
}

clean {
    dependsOn cleanTempDir
}

build {
    dependsOn asciidoctor
}

codenarc {
    toolVersion = '0.24.1'
}

codenarcMain {
    ignoreFailures false
    configFile file('config/codenarc/codenarc.groovy')
}

codenarcTest {
    ignoreFailures true
    configFile file('config/codenarc/codenarcTest.groovy')
}